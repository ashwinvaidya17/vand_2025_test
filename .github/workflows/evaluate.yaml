name: Evaluation Workflow

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  evaluate:
    runs-on: vand2025-runner
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout PR code
        uses: actions/checkout@v4

      - name: Run evaluation
        run: |
          cd eval
          uv sync
          uv run eval

      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"

      - name: Save static files
        run: |
          # Create a temporary directory and copy static files
          mkdir -p /tmp/static
          cp -r .platform/static/* /tmp/static/

      - name: Checkout gh-pages branch
        run: |
          # Save the PR SHA to use later
          PR_SHA=$(git rev-parse HEAD)

          # Try to fetch gh-pages branch
          if ! git fetch origin gh-pages; then
            # If branch doesn't exist, create an orphan branch
            git checkout --orphan gh-pages
            git rm -rf .
            touch .nojekyll
            git add .nojekyll
            git commit -m "Initialize gh-pages branch"
            git push origin gh-pages
          else
            git checkout gh-pages
          fi

      - name: Copy Static files
        run: |
          # Copy the saved static files to the gh-pages branch
          cp -r /tmp/static/* .

      - name: Update results
        run: |
          # Create results.csv if it doesn't exist
          if [ ! -f results.csv ]; then
            echo "pr_name,pr_number,commit_sha,timestamp,score,pr_actor" > results.csv
          fi

          # Read the evaluation output and append to results.csv
          PR_NAME=${{ github.event.pull_request.title }}
          PR_NUMBER=${{ github.event.pull_request.number }}
          PR_ACTOR=${{ github.actor }}
          TIMESTAMP=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          SCORE=$(cat /tmp/output.json | jq -r '.score')

          echo "$PR_NAME,$PR_NUMBER,$PR_SHA,$TIMESTAMP,$SCORE,$PR_ACTOR" >> results.csv

          # Commit and push changes
          git add .
          git commit -m "Add evaluation results for PR $PR_NAME (#$PR_NUMBER) by $PR_ACTOR"
          git push origin gh-pages

      - name: Add results comment
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const result = JSON.parse(fs.readFileSync('/tmp/output.json', 'utf8'));

            const comment = `## Evaluation Results
            Score: ${result.score}
            PR Actor: ${PR_ACTOR}`;

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.name,
              issue_number: context.issue.number,
              body: comment
            });
